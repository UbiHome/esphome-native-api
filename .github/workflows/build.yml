name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # for checkout

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test - ${{ matrix.platform.os-name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

          - os-name: Linux-debian
            target: armv7-unknown-linux-musleabi
            runs-on: ubuntu-24.04

          # - os-name: Linux-riscv64
          #   runs-on: ubuntu-24.04
          #   target: riscv64gc-unknown-linux-gnu

          # - os-name: FreeBSD-x86_64
          #   runs-on: ubuntu-24.04
          #   target: x86_64-unknown-freebsd

          # - os-name: Linux-aarch64
          #   runs-on: ubuntu-24.04
          #   target: aarch64-unknown-linux-musl

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate Protobuf files
        run: | 
          cd generator
          cargo run
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          # Add "--locked" again when release please is not updating all Cargo.toml files
          args: "--release"
          strip: false

      - name: Test binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: test
          target: ${{ matrix.platform.target }}
          # Add "--locked" again when release please is not updating all Cargo.toml files
          args: "--verbose"
          strip: false